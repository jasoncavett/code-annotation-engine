<?xml version="1.0" encoding="utf-8" ?>
<ScintillaNET>
  <Language Name="default">
    <Styles>
      <Style Name="Default" FontName="Consolas"/>
    </Styles>
  </Language>

  <!-- Language from http://scintillanet.codeplex.com/Thread/View.aspx?ThreadId=83269 -->
  <Language Name="java">
    <AutoComplete FillUpCharacters=".([" SingleLineAccept="True" IsCaseSensitive="False">
      <List>
        abstract assert boolean break byte case catch char class continue default do double else enum extends
        final finally float for if import int interface long native new package private protected public return
        short static strictfp super switch synchronized this throw throws transient try void volatile while
      </List>
    </AutoComplete>

    <Indentation TabWidth="4" SmartIndentType="cpp" />

    <Lexer LexerName="cpp" LineCommentPrefix="//" StreamCommentPrefix="/* " StreamCommentSuffix=" */" >
      <Keywords List="0" Inherit="False">
        abstract assert break case catch continue default do else extends final finally for if import interface
        native new package private protected public return strictfp super switch synchronized this throw throws
        transient try volatile while
      </Keywords>
      <Keywords List="1" Inherit="False">
        boolean byte char class double enum float int long short static
      </Keywords>
    </Lexer>
  </Language>

  <!--C# language based on http://scintillanet.codeplex.com/Thread/View.aspx?ThreadId=83269-->
  <Language Name="C#">
    <AutoComplete FillUpCharacters=".([" SingleLineAccept="True" IsCaseSensitive="False">
      <List>
        abstract assert boolean break byte case catch char class continue default do double else enum extends
        final finally float for if import int interface long native new package private protected public return
        short static strictfp super switch synchronized this throw throws transient try void volatile while
      </List>
    </AutoComplete>

    <Indentation TabWidth="4" SmartIndentType="cpp" />

    <Lexer LexerName="cpp" LineCommentPrefix="//" StreamCommentPrefix="/* " StreamCommentSuffix=" */" >
      <Keywords List="0" Inherit="False">
        abstract assert boolean break byte case catch char class continue default do double else enum extends
        final finally float for if import int interface long native new package private protected public return
        short static strictfp super switch synchronized this throw throws transient try void volatile while
      </Keywords>
      <Keywords List="1" Inherit="False">
        bool byte do char class double else enum float if int long short static using
      </Keywords>
    </Lexer>
  </Language>
  
  
    <!--Perl language based on http://scintillanet.codeplex.com/Thread/View.aspx?ThreadId=83269-->
  <Language Name="Perl">
    <AutoComplete FillUpCharacters=".([" SingleLineAccept="True" IsCaseSensitive="False">
      <List>
        abstract assert boolean break byte case catch char class continue default do double else enum extends
        $ @ / \ ^ =~ die do else for foreach if last next print return sub while unless until
      </List>
    </AutoComplete>

    <Indentation TabWidth="4" SmartIndentType="cpp" />

    <Lexer LexerName="cpp" LineCommentPrefix="#" StreamCommentPrefix="/* " StreamCommentSuffix=" */" >
      <Keywords List="0" Inherit="False">
        do double else enum extends
      </Keywords>
      <Keywords List="1" Inherit="False">
        float g long s str
      </Keywords>
    </Lexer>
  </Language>
  

  <!--Awk language based on http://scintillanet.codeplex.com/Thread/View.aspx?ThreadId=83269-->
  <Language Name="awk">
    <AutoComplete FillUpCharacters=".([" SingleLineAccept="True" IsCaseSensitive="False">
      <List>
        $0 $1 $2 $3 $4 $5 $6 $7 $8 $9 fileman fs nf nr ofs ors ofmt print rs
      </List>
    </AutoComplete>

    <Indentation TabWidth="4" SmartIndentType="cpp" />

    <Lexer LexerName="cpp" LineCommentPrefix="#" StreamCommentPrefix="/* " StreamCommentSuffix=" */" >
      <Keywords List="0" Inherit="False">
        do double $0 $1 $2 $3 $4 $5 $6 $7 $8 $9 fileman fs nf nr ofs ors ofmt print printf rs
      </Keywords>
      <Keywords List="1" Inherit="False">
        function return
      </Keywords>
    </Lexer>
  </Language>
  
  <!--C language based on http://scintillanet.codeplex.com/Thread/View.aspx?ThreadId=83269-->
  <Language Name="C">
    <AutoComplete FillUpCharacters=".([" SingleLineAccept="True" IsCaseSensitive="False">
      <List>
        auto break case catch Complex continue default do else false for goto if Imaginary
        inline register restrict return sizeof switch struct typedef union void volatile
        while
      </List>
    </AutoComplete>

    <Indentation TabWidth="4" SmartIndentType="cpp" />

    <Lexer LexerName="cpp" LineCommentPrefix="/*" StreamCommentPrefix="/* " StreamCommentSuffix=" */" >
      <Keywords List="0" Inherit="False">
        inline register restrict return sizeof switch struct typedef union void volatile
        while
      </Keywords>
      <Keywords List="1" Inherit="False">
        Bool char const double enum extern float int long signed short static unsigned
      </Keywords>
    </Lexer>
  </Language>
  
  <!--Visual Basic .Net language based on http://scintillanet.codeplex.com/Thread/View.aspx?ThreadId=83269-->
  <Language Name="Visual Basic .Net">
    <AutoComplete FillUpCharacters=".([" SingleLineAccept="True" IsCaseSensitive="False">
      <List>
        AddHandler AddressOf Alias And AndAlso Ansi Append As Assembly Auto Binary ByRef
        Byte ByVal Call Case Catch CBool CByte CChar CInt Class Clng CObj Compare CShort
        CSng CStr CType Date Decimal Declare Default Delegate Dim Do Each Else ElseIf End
        EndIf Erase Error Event Explicit False For Finally For Friend Function Get GetType
        GoTo Handles If Implements Imports In Inherits Input Interface Is Let Lib Like Lock
        Loop Me Mid Mod Module MustInherit MustOverride MyBase MyClass Namespace New Next Not
        Nothing NotInheritable NotOverridable Object Off On Option Optional Or OrElse Output
        Overloads Overridable Overrides ParamArray Preserve Private Property Protected Public
        RaiseEvent Random Read ReadOnly ReDim Rem RemoveHandler Resume Return Seek Select Set
        Shadows Shared Single Step Stop String Structure Sub SyncLock Text Then Throw To True
        Try TypeOf Unicode Until Variant When While With WithEvents WriteOnly XOr
        while
      </List>
    </AutoComplete>

    <Indentation TabWidth="4" SmartIndentType="cpp" />

    <Lexer LexerName="cpp" LineCommentPrefix="'" >
      <Keywords List="0" Inherit="False">
        Explicit False For Finally For Friend Function Get GetType
      </Keywords>
      <Keywords List="1" Inherit="False">
        Boolean Double Enum Integer Long Short Static
      </Keywords>
    </Lexer>
  </Language>
  

  <!--COBOL language based on http://scintillanet.codeplex.com/Thread/View.aspx?ThreadId=83269-->
  <Language Name="COBOL">
    <AutoComplete FillUpCharacters=".([" SingleLineAccept="True" IsCaseSensitive="True">
      <List>
        ACCEPT ACCESS ADD ADDRESS ADVANCING AFTER ALL ALLOWING ALPHABET ALPHABETIC ALPHABETIC-LOWER
        ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED ALSO ALTER ALTERNATE AND ANY APPLY ARE AREA
        AREAS ARITHMETIC ASCENDING ASSIGN AT AUTHOR AUTOMATIC B-AND B-EXOR B-LESS B-NOT B-OR BASIS BEFORE
        BEGINNING BINARY BIT BITS BLANK BLOCK BOOLEAN BOTTOM BY CALL CANCEL CBL CD CF CH CHARACTER
        CHARACTERS CLASS CLASS-ID CLOCK-UNITS CLOSE COBOL CODE CODE-SET COLLATING COLUMN COM-REG COMMA
        COMMIT COMMON COMMUNICATION COMP COMP-1 COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 COMP-7 COMP-8 COMP-9
        COMPUTATIONAL COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5
        COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE CONFIGURATION CONNECT
        CONTAINED CONTAINS CONTENT CONTINUE CONTROL CONTROLS CONVERTING COPY CORR CORRESPONDING COUNT
        CURRENCY CURRENT CYCLE DATA DATE DATE-COMPILED DATE-WRITTEN DAY DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY
        DB-DATA-NAME DB-EXCEPTION DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS DE DEBUG-CONTENTS DEBUG-ITEM
        DEBUG-LINE DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING DECIMAL-POINT DECLARATIVES
        DEFAULT DELETE DELIMITED DELIMITER DEPENDING DESCENDING DESTINATION DETAIL DISABLE DISCONNECT DISPLAY
        DISPLAY-1 DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE
        DIVISION DOWN DUPLICATE DUPLICATES DYNAMIC EGCS EGI EJECT ELSE EMI EMPTY ENABLE END END-ADD END-CALL
        END-COMPUTE END-DELETE END-DISABLE END-DIVIDE END-ENABLE END-EVALUATE END-IF END-INVOKE END-MULTIPLY
        END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN END-REWRITE END-SEARCH END-SEND END-START
        END-STRING END-SUBTRACT END-TRANSCEIVE END-UNSTRING END-WRITE ENDING ENTER ENTRY ENVIRONMENT EOP
        EQUAL EQUALS ERASE ERROR ESI EVALUATE EVERY EXACT EXCEEDS EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL
        FALSE FD FETCH FILE FILE-CONTROL FILLER FINAL FIND FINISH FIRST FOOTING FOR FORM FORMAT FREE FROM
        FUNCTION GENERATE GET GIVING GLOBAL GO GOBACK GREATER GROUP HEADING HIGH-VALUE HIGH-VALUES I-O
        I-O-CONTROL ID IDENTIFICATION IF IN INDEX INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 INDEX-6 INDEX-7
        INDEX-8 INDEX-9 INDEXED INDICATE INHERITS INITIAL INITIALIZE INITIATE INPUT INPUT-OUTPUT INSERT
        INSPECT INSTALLATION INTO INVALID INVOKE IS JUST JUSTIFIED KANJI KEEP KEY LABEL LAST LD LEADING LEFT
        LENGTH LESS LIMIT LIMITS LINAGE LINAGE-COUNTER LINE LINE-COUNTER LINES LINKAGE LOCALLY LOCAL-STORAGE
        LOCK LOW-VALUE LOW-VALUES MEMBER MEMORY MERGE MESSAGE METACLASS METHOD METHOD-ID MODE MODIFY MODULES
        MORE-LABELS MOVE MULTIPLE MULTIPLY NATIVE NEGATIVE NEXT NO NORMAL NOT NULL NULLS NUMBER NUMERIC
        NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS OF OFF OMITTED ON ONLY OPEN OPTIONAL OR ORDER ORGANIZATION
        OTHER OUTPUT OVERFLOW OVERRIDE OWNER PACKED-DECIMAL PADDING PAGE PAGE-COUNTER PARAGRAPH PASSWORD PERFORM
        PF PH PIC PICTURE PLUS POINTER POSITION POSITIVE PRESENT PREVIOUS PRINTING PRIOR PROCEDURE PROCEDURE-POINTER
        PROCEDURES PROCEED PROCESSING PROGRAM PROGRAM-ID PROTECTED PURGE QUEUE QUOTE QUOTES RANDOM RD READ READY
        REALM RECEIVE RECONNECT RECORD RECORD-NAME RECORDING RECORDS RECURSIVE REDEFINES REEL REFERENCE REFERENCES
        RELATION RELATIVE RELEASE RELOAD REMAINDER REMOVAL RENAMES REPEATED REPLACE REPLACING REPORT REPORTING
        REPORTS REPOSITORY RERUN RESERVE RESET RETAINING RETRIEVAL RETURN RETURN-CODE RETURNING REVERSED REWIND
        REWRITE RF RH RIGHT ROLLBACK ROUNDED RUN SAME SD SEARCH SECTION SECURITY SEGMENT SEGMENT-LIMIT SELECT SELF
        SEND SENTENCE SEPARATE SEQUENCE SEQUENTIAL SERVICE SESSION-ID SET SHARED SHIFT-IN SHIFT-OUT SIGN SIZE SKIP1
        SKIP2 SKIP3 SORT SORT-CONTROL SORT-CORE-SIZE SORT-FILE-SIZE SORT-MERGE SORT-MESSAGE SORT-MODE-SIZE SORT-RETURN
        SOURCE SOURCE-COMPUTER SPACE SPACES SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 STANDARD-3 STANDARD-4 START
        STATUS STOP STORE STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA SUBTRACT SUM SUPER SUPPRESS SYMBOLIC
        SYNC SYNCHRONIZED TABLE TALLY TALLYING TAPE TENANT TERMINAL TERMINATE TEST TEXT THAN THEN THROUGH THRU TIME
        TIMEOUT TIMES TITLE TO TOP TRACE TRAILING TRANSCEIVE TRUE TYPE UNEQUAL UNIT UNSTRING UNTIL UP UPDATE UPON USAGE
        USAGE-MODE USE USING VALID VALIDATE VALUE VALUES VARYING WAIT WHEN WHEN-COMPILED WITH WITHIN WORDS WORKING-STORAGE
      </List>
    </AutoComplete>

    <Indentation TabWidth="4" SmartIndentType="cpp" />

    <Lexer LexerName="cpp" LineCommentPrefix="*" >
      <Keywords List="0" Inherit="False">
        ACCEPT ACCESS ADD ADDRESS ADVANCING AFTER ALL ALLOWING ALPHABET ALPHABETIC ALPHABETIC-LOWER
        ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED ALSO ALTER ALTERNATE AND ANY APPLY ARE AREA
        AREAS ARITHMETIC ASCENDING ASSIGN AT AUTHOR AUTOMATIC B-AND B-EXOR B-LESS B-NOT B-OR BASIS BEFORE
        BEGINNING BINARY BIT BITS BLANK BLOCK BOOLEAN BOTTOM BY CALL CANCEL CBL CD CF CH CHARACTER
        CHARACTERS CLASS CLASS-ID CLOCK-UNITS CLOSE COBOL CODE CODE-SET COLLATING COLUMN COM-REG COMMA
        COMMIT COMMON COMMUNICATION COMP COMP-1 COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 COMP-7 COMP-8 COMP-9
        COMPUTATIONAL COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5
        COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE CONFIGURATION CONNECT
        CONTAINED CONTAINS CONTENT CONTINUE CONTROL CONTROLS CONVERTING COPY CORR CORRESPONDING COUNT
        CURRENCY CURRENT CYCLE DATA DATE DATE-COMPILED DATE-WRITTEN DAY DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY
        DB-DATA-NAME DB-EXCEPTION DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS DE DEBUG-CONTENTS DEBUG-ITEM
        DEBUG-LINE DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING DECIMAL-POINT DECLARATIVES
        DEFAULT DELETE DELIMITED DELIMITER DEPENDING DESCENDING DESTINATION DETAIL DISABLE DISCONNECT DISPLAY
        DISPLAY-1 DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE
        DIVISION DOWN DUPLICATE DUPLICATES DYNAMIC EGCS EGI EJECT ELSE EMI EMPTY ENABLE END END-ADD END-CALL
        END-COMPUTE END-DELETE END-DISABLE END-DIVIDE END-ENABLE END-EVALUATE END-IF END-INVOKE END-MULTIPLY
        END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN END-REWRITE END-SEARCH END-SEND END-START
        END-STRING END-SUBTRACT END-TRANSCEIVE END-UNSTRING END-WRITE ENDING ENTER ENTRY ENVIRONMENT EOP
        EQUAL EQUALS ERASE ERROR ESI EVALUATE EVERY EXACT EXCEEDS EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL
        FALSE FD FETCH FILE FILE-CONTROL FILLER FINAL FIND FINISH FIRST FOOTING FOR FORM FORMAT FREE FROM
        FUNCTION GENERATE GET GIVING GLOBAL GO GOBACK GREATER GROUP HEADING HIGH-VALUE HIGH-VALUES I-O
        I-O-CONTROL ID IDENTIFICATION IF IN INDEX INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 INDEX-6 INDEX-7
        INDEX-8 INDEX-9 INDEXED INDICATE INHERITS INITIAL INITIALIZE INITIATE INPUT INPUT-OUTPUT INSERT
        INSPECT INSTALLATION INTO INVALID INVOKE IS JUST JUSTIFIED KANJI KEEP KEY LABEL LAST LD LEADING LEFT
        LENGTH LESS LIMIT LIMITS LINAGE LINAGE-COUNTER LINE LINE-COUNTER LINES LINKAGE LOCALLY LOCAL-STORAGE
        LOCK LOW-VALUE LOW-VALUES MEMBER MEMORY MERGE MESSAGE METACLASS METHOD METHOD-ID MODE MODIFY MODULES
        MORE-LABELS MOVE MULTIPLE MULTIPLY NATIVE NEGATIVE NEXT NO NORMAL NOT NULL NULLS NUMBER NUMERIC
        NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS OF OFF OMITTED ON ONLY OPEN OPTIONAL OR ORDER ORGANIZATION
        OTHER OUTPUT OVERFLOW OVERRIDE OWNER PACKED-DECIMAL PADDING PAGE PAGE-COUNTER PARAGRAPH PASSWORD PERFORM
        PF PH PIC PICTURE PLUS POINTER POSITION POSITIVE PRESENT PREVIOUS PRINTING PRIOR PROCEDURE PROCEDURE-POINTER
        PROCEDURES PROCEED PROCESSING PROGRAM PROGRAM-ID PROTECTED PURGE QUEUE QUOTE QUOTES RANDOM RD READ READY
        REALM RECEIVE RECONNECT RECORD RECORD-NAME RECORDING RECORDS RECURSIVE REDEFINES REEL REFERENCE REFERENCES
        RELATION RELATIVE RELEASE RELOAD REMAINDER REMOVAL RENAMES REPEATED REPLACE REPLACING REPORT REPORTING
        REPORTS REPOSITORY RERUN RESERVE RESET RETAINING RETRIEVAL RETURN RETURN-CODE RETURNING REVERSED REWIND
        REWRITE RF RH RIGHT ROLLBACK ROUNDED RUN SAME SD SEARCH SECTION SECURITY SEGMENT SEGMENT-LIMIT SELECT SELF
        SEND SENTENCE SEPARATE SEQUENCE SEQUENTIAL SERVICE SESSION-ID SET SHARED SHIFT-IN SHIFT-OUT SIGN SIZE SKIP1
        SKIP2 SKIP3 SORT SORT-CONTROL SORT-CORE-SIZE SORT-FILE-SIZE SORT-MERGE SORT-MESSAGE SORT-MODE-SIZE SORT-RETURN
        SOURCE SOURCE-COMPUTER SPACE SPACES SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 STANDARD-3 STANDARD-4 START
        STATUS STOP STORE STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA SUBTRACT SUM SUPER SUPPRESS SYMBOLIC
        SYNC SYNCHRONIZED TABLE TALLY TALLYING TAPE TENANT TERMINAL TERMINATE TEST TEXT THAN THEN THROUGH THRU TIME
        TIMEOUT TIMES TITLE TO TOP TRACE TRAILING TRANSCEIVE TRUE TYPE UNEQUAL UNIT UNSTRING UNTIL UP UPDATE UPON USAGE
        USAGE-MODE USE USING VALID VALIDATE VALUE VALUES VARYING WAIT WHEN WHEN-COMPILED WITH WITHIN WORDS WORKING-STORAGE
      </Keywords>
      <Keywords List="1" Inherit="False">
        WRITE WRITE-ONLY ZERO ZEROES ZEROS
      </Keywords>
    </Lexer>
  </Language>
  
</ScintillaNET>